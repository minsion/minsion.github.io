import{_ as s,c as i,o as a,a9 as n}from"./chunks/framework.bq0jHAD3.js";const o=JSON.parse('{"title":"Sass 动态转换单位","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"blog/css-scss-unit.md","filePath":"blog/css-scss-unit.md","lastUpdated":null}'),h={name:"blog/css-scss-unit.md"},p=n(`<h1 id="sass-动态转换单位" tabindex="-1">Sass 动态转换单位 <a class="header-anchor" href="#sass-动态转换单位" aria-label="Permalink to &quot;Sass 动态转换单位&quot;">​</a></h1><h2 id="项目场景" tabindex="-1">项目场景： <a class="header-anchor" href="#项目场景" aria-label="Permalink to &quot;项目场景：&quot;">​</a></h2><p>在使用 Sass 扩展语言进行开发的时候。</p><h2 id="问题描述" tabindex="-1">问题描述： <a class="header-anchor" href="#问题描述" aria-label="Permalink to &quot;问题描述：&quot;">​</a></h2><p>使用 Sass 定义了一个变量 $box: 750px, 在这个时候想直接在后面添加是行不通的。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$box: 750px;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: $box vw; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 返回 750px vw */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="原因分析" tabindex="-1">原因分析： <a class="header-anchor" href="#原因分析" aria-label="Permalink to &quot;原因分析：&quot;">​</a></h2><p>在这里与 Sass 语言的编译处理机制有关。</p><h2 id="解决方案" tabindex="-1">解决方案： <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案：&quot;">​</a></h2><p>首先我们得先去掉当前长度的单位，用现在的长度除于 1 的单位即可去掉单位；然后在乘以需要转换的比例即可，当然在转换单位的时候记得按比例转换。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 示例 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$box: 750px;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: $box / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> * </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 返回 750vw */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>现在有一个需求的就是将 px 转变为 vw，并且基准值为 100px</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$box: 750px;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: $n / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> * </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 返回 7.5vw */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>可是通过这样写发现，如果需要重复转换的时候就得重复这样写了，所以我们可以使用 Sass 中的函数进行封装，以便重复调用。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$box: 750px;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 转换width */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> getWidth($n) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* $n * 0 + 1 这样可以获取到 $n 的单位 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $n / ($n * 0 + 1) / 100 * 1vw;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 转换Height */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> getHeight($n) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $n / ($n * 0 + 1) / 100 * 1vh;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: getWitch($box); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 返回 7.5vw */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: getHeight(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3721</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 返回 37.21vh */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,15),l=[p];function t(e,k,d,r,E,c){return a(),i("div",null,l)}const y=s(h,[["render",t]]);export{o as __pageData,y as default};
